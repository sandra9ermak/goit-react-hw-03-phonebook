{"version":3,"sources":["components/Form/Form.module.css","components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/Contact/Contact.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","App/App.js","index.js"],"names":["module","exports","Contact","filter","onClick","filtered","className","styles","contactList","map","item","contactItem","spanName","name","spanNumber","number","type","id","contactButton","Form","state","handleInputChange","event","currentTarget","value","setState","reset","formSubmit","preventDefault","contact","uuidv4","props","onSubmit","this","form","labelInput","title","input","onChange","pattern","placeholder","required","buttonForm","React","Component","Filter","inputSearch","button","App","contacts","renderContact","some","toLowerCase","Notiflix","Notify","warning","prevState","filteredContacts","includes","deleteContact","contactsJson","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","container","section","mainTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3c60c0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__BJRYB\",\"buttonForm\":\"Form_buttonForm__8SYZ8\",\"title\":\"Form_title__1f-Cn\",\"mainTitle\":\"Form_mainTitle__1q87x\",\"section\":\"Form_section__2Agud\",\"form\":\"Form_form__1apBR\",\"labelInput\":\"Form_labelInput__2Ti3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactButton\":\"Contact_contactButton___hsw-\",\"contactItem\":\"Contact_contactItem__1Ovp0\",\"spanName\":\"Contact_spanName__2DVEU\",\"spanNumber\":\"Contact_spanNumber__3cDb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSearch\":\"Filter_inputSearch__f4T52\",\"button\":\"Filter_button__1Bj0s\"};","import PropTypes from 'prop-types';\r\n\r\nimport styles from \"./Contact.module.css\";\r\n\r\nconst Contact = ({ filter, onClick }) => {\r\n    const filtered = filter();\r\n    return (\r\n    <ul className={styles.contactList}>\r\n        {filtered.map(item => \r\n            <li key={item.id} className={styles.contactItem}>\r\n                <span className={styles.spanName}>{item.name}</span>\r\n                <span className={styles.spanNumber}>{item.number}</span>\r\n                <button type=\"submit\" onClick={() => onClick(item.id)} className={styles.contactButton}>Delete</button>\r\n            </li>\r\n            )}\r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    filter: PropTypes.func.isRequired\r\n}","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./Form.module.css\";\r\n\r\nclass Form extends React.Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n    };\r\n    \r\n    reset = () => {\r\n   this.setState({ name: \"\", number: \"\" });\r\n    };\r\n    \r\n    formSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const contact = {\r\n        id: uuidv4(),\r\n        ...this.state,\r\n        };\r\n        \r\n        this.props.onSubmit(contact);\r\n\r\n        this.reset();\r\n    };\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.formSubmit} className={styles.form}>\r\n                <label className={styles.labelInput}>\r\n                    <h3 className={styles.title}>Name</h3>\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleInputChange}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        placeholder=\"Name\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required />\r\n                </label>\r\n                <label className={styles.labelInput}>\r\n                    <h3 className={styles.title}>Number</h3>\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleInputChange}\r\n                        placeholder=\"Number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required />\r\n                </label>\r\n                <button  className={styles.buttonForm} type=\"submit\">Add name</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import PropTypes from 'prop-types';\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ onChange, value }) => {\r\n    return (\r\n        <label>\r\n            <input className={styles.inputSearch} type=\"text\" name=\"filter\" value={value} placeholder=\"Search contact\" onChange={onChange} />\r\n            <button className={styles.button} type=\"submit\">Search</button>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired\r\n}","import Notiflix from \"notiflix\";\nimport \"./App.css\";\nimport styles from \"../components/Form/Form.module.css\";\nimport React from \"react\";\nimport Contact from \"../components/Contact/Contact\";\nimport Form from \"../components/Form/Form\";\nimport Filter from \"../components/Filter/Filter\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contactsJson = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (contactsJson) this.setState({ contacts: contactsJson });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  renderContact = ({ name, number, id }) => {\n    const item = {\n      id,\n      name,\n      number,\n    };\n\n    if (\n      this.state.contacts.some(\n        (item) => item.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return Notiflix.Notify.warning(`${name} is already in contacts`);\n    } else if (this.state.contacts.some((item) => item.number === number)) {\n      return Notiflix.Notify.warning(`${number} is already in contacts`);\n    } else {\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, item],\n      }));\n    }\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  filteredContacts = () => {\n    return this.state.contacts.filter(\n      (item) =>\n        item.name.toLowerCase().includes(this.state.filter.toLowerCase()) ||\n        item.number.includes(this.state.filter)\n    );\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((item) => item.id !== id),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.section}>\n          <h1 className={styles.mainTitle}>Phonebook</h1>\n          <Form onSubmit={this.renderContact}></Form>\n          <h2 className={styles.mainTitle}>Contacts</h2>\n          <Filter\n            onChange={this.handleInputChange}\n            value={this.state.filter}\n          ></Filter>\n          <Contact\n            filter={this.filteredContacts}\n            onClick={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport \"./reset.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}